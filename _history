{"entries":[{"timestamp":1737839746376,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[-1,"s"],[0,"://"],[-1,"developers.google.com/blockly/xml\"><variables></variables>"],[1,"www.w3.org/1999/xhtml\">\n  "],[0,"<blo"]],"start1":12,"start2":12,"length1":70,"length2":37},{"diffs":[[0,"art\""],[-1," x=\"20\" y=\"20\""],[0,"></b"]],"start1":67,"start2":67,"length1":22,"length2":8},{"diffs":[[0,"</block>"],[1,"\n  "],[0,"<block t"]],"start1":72,"start2":72,"length1":16,"length2":19},{"diffs":[[0,"ver\""],[-1," x=\"225\" y=\"20\""],[0,"></b"]],"start1":107,"start2":107,"length1":23,"length2":8},{"diffs":[[0,"</block>"],[1,"\n"],[0,"</xml>"]],"start1":112,"start2":112,"length1":14,"length2":15}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"//% color=\"#EEAA00\" icon=\"\\uf140\"\n//% block=\"ET: Line follower\"\n//% block.loc.nl=\"ET: Lijn volger\"\nnamespace EtDistance {\n    let MODULE = \"EtLineFollow\"\n\n    export enum Mode {\n        //% block=\"a dark line on a light surface\"\n        //% block.loc.nl=\"een donkere lijn op een lichte ondergrond\"\n        BonW,\n        //% block=\"a light line on a dark surface\"\n        //% block.loc.nl=\"een lichte lijn op een donkere ondergrond\"\n        WonB\n    }\n\n    let EventFarleftOn: EtCommon.eventHandler\n    let EventFarleftOff: EtCommon.eventHandler\n    let EventLeftOn: EtCommon.eventHandler\n    let EventLeftOff: EtCommon.eventHandler\n    let EventRightOn: EtCommon.eventHandler\n    let EventRightOff: EtCommon.eventHandler\n    let EventFarrightOn: EtCommon.eventHandler\n    let EventFarrightOff: EtCommon.eventHandler\n\n    export function onEventFarleftOn(id: string, value: string) {\n        if (EventFarleftOn) EventFarleftOn(id)\n    }\n\n    export function onEventFarleftOff(id: string, value: string) {\n        if (EventFarleftOff) EventFarleftOff(id)\n    }\n\n    export function onEventLeftOn(id: string, value: string) {\n        if (EventLeftOn) EventLeftOn(id)\n    }\n\n    export function onEventLeftOff(id: string, value: string) {\n        if (EventLeftOff) EventLeftOff(id)\n    }\n\n    export function onEventRightOn(id: string, value: string) {\n        if (EventRightOn) EventRightOn(id)\n    }\n\n    export function onEventRightOff(id: string, value: string) {\n        if (EventRightOff) EventRightOff(id)\n    }\n\n    export function onEventFarrightOn(id: string, value: string) {\n        if (EventFarrightOn) EventFarrightOn(id)\n    }\n\n    export function onEventFarrightOff(id: string, value: string) {\n        if (EventFarrightOff) EventFarrightOff(id)\n    }\n\n    //% block=\"ID\"\n    //% block.loc.nl=\"ID\"\n    export function id(): string {\n        return MODULE\n    }\n\n    //% block=\"set module id to %id\"\n    //% block.loc.nl=\"stel de module id in op %id\"\n    //% id.defl=\"EtDistance\"\n    export function setModuleId(id: string) {\n        MODULE = id\n    }\n\n    //% block=\"with %id is %near cm nearby and %away cm far away\"\n    //% block.loc.nl=\"bij %id is %near cm dichtbij en %away cm verweg\"\n    //% inlineInputMode=inline\n    //% id.defl=\"EtDistance\"\n    //% near.min=20 near.max=300 near.defl=75\n    //% away.min=20 away.max=300 away.defl=275\n    export function setMode(id: string, near: number, away: number) {\n        let val = near.toString() + \"/\" + away.toString()\n        EtCommon.sendSignal(id, \"distribution\", val)\n    }\n\n    //% block=\"point %id %degr degrees to the %ori\"\n    //% block.loc.nl=\"richt %id %degr graden naar %ori\"\n    //% id.defl=\"EtDistance\"\n    //% degr.min=0 degr.max=45 degr.defl=45\n    export function setAngle(id: string, degr: number, ori: Orientation) {\n        if (ori == Orientation.Left)\n            degr = -degr\n        EtCommon.sendSignal(id, \"angle\", degr.toString())\n    }\n\n    //% block=\"point %id straight to the front\"\n    //% block.loc.nl=\"richt %id recht naar voren\"\n    //% id.defl=\"EtDistance\"\n    export function setFront(id: string) {\n        EtCommon.sendSignal(id, \"angle\", \"0\")\n    }\n\n    //% block=\"when the distance to %id is %dist\"\n    //% block.loc.nl=\"wanneer de afstand tot %id %dist is\"\n    //% id.defl=\"EtDistance\"\n    export function onDistance(id: string, dist: Distance, programmableCode: () => void): void {\n        switch (dist) {\n            case Distance.Normal:\n                EventFrontNormal = programmableCode\n                EtCommon.events.register(MODULE, \"normal\", onEventFrontNormal)\n                break\n            case Distance.Near:\n                EventFrontNear = programmableCode\n                EtCommon.events.register(MODULE, \"near\", onEventFrontNear)\n                break\n            case Distance.Away:\n                EventFrontAway = programmableCode\n                EtCommon.events.register(MODULE, \"away\", onEventFrontAway)\n                break\n        }\n    }\n}"],[0,"\n"]],"start1":0,"start2":0,"length1":3970,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," \"*\""],[-1,",\n        \"pxt-common\": \"github:ETmodules/pxt-common#de53829cc3818cab6a49f4c1130f4df97e9c777d\""],[0,"\n"],[1,""],[0,"    "]],"start1":141,"start2":141,"length1":103,"length2":9},{"diffs":[[0,"   \""],[-1,"preferredEditor\": \"tsprj\""],[1,"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":238,"start2":238,"length1":32,"length2":31}]}]},{"timestamp":1737840336377,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"space Et"],[-1,"LineFollow"],[1,"Distance"],[0," {\n    l"]],"start1":103,"start2":103,"length1":26,"length2":24},{"diffs":[[0," }\n\n"],[-1,"    export enum Sensor {\n        //% block=\"far left\"\n        //% block.loc.nl=\"uiterst links\"\n        FarLeft,\n        //% block=\"left\"\n        //% block.loc.nl=\"links\"\n        Left,\n        //% block=\"right\"\n        //% block.loc.nl=\"rechts\"\n        Right,\n        //% block=\"far right\"\n        //% block.loc.nl=\"uiterst rechts\"\n        FarRight\n    }\n\n"],[0,"    "]],"start1":448,"start2":448,"length1":363,"length2":8},{"diffs":[[0," id.defl=\"Et"],[-1,"LineFollow"],[1,"Distance"],[0,"\"\n    export"]],"start1":1969,"start2":1969,"length1":34,"length2":32},{"diffs":[[0,"%id "],[-1,"ride on %mode"],[1,"is %near cm nearby and %away cm far away"],[0,"\"\n  "]],"start1":2084,"start2":2084,"length1":21,"length2":48},{"diffs":[[0,"nl=\""],[-1,"met"],[1,"bij"],[0," %id "],[-1,"rijd op %mode\"\n    //% id.defl=\"EtLineFollow\"\n    export function setMode(id: string, mode: Mode) {\n        let sig = (mode == Mode.BonW ? \"bonw\" : \"wonb\")"],[1,"is %near cm dichtbij en %away cm verweg\"\n    //% inlineInputMode=inline\n    //% id.defl=\"EtDistance\"\n    //% near.min=20 near.max=300 near.defl=75\n    //% away.min=20 away.max=300 away.defl=275\n    export function setMode(id: string, near: number, away: number) {\n        let val = near.toString() + \"/\" + away.toString()\n        EtCommon.sendSignal(id, \"distribution\", val)\n    }\n\n    //% block=\"point %id %degr degrees to the %ori\"\n    //% block.loc.nl=\"richt %id %degr graden naar %ori\"\n    //% id.defl=\"EtDistance\"\n    //% degr.min=0 degr.max=45 degr.defl=45\n    export function setAngle(id: string, degr: number, ori: Orientation) {\n        if (ori == Orientation.Left)\n            degr = -degr\n        EtCommon.sendSignal(id, \"angle\", degr.toString())\n    }\n\n    //% block=\"point %id straight to the front\"\n    //% block.loc.nl=\"richt %id recht naar voren\"\n    //% id.defl=\"EtDistance\"\n    export function setFront(id: string) {"],[0,"\n   "]],"start1":2148,"start2":2148,"length1":171,"length2":950},{"diffs":[[0,"id, "],[-1,"sig"],[1,"\"angle\""],[0,", \""],[1,"0"],[0,"\")\n "]],"start1":3123,"start2":3123,"length1":14,"length2":19},{"diffs":[[0," \"0\")\n    }\n"],[1,"\n"],[0,"    //% bloc"]],"start1":3135,"start2":3135,"length1":24,"length2":25},{"diffs":[[0,"defl=\"Et"],[-1,"LineFollow"],[1,"Distance"],[0,"\"\n    ex"]],"start1":3268,"start2":3268,"length1":26,"length2":24},{"diffs":[[0,"n on"],[-1,"LFon"],[1,"Distance"],[0,"(id:"]],"start1":3304,"start2":3304,"length1":12,"length2":16}]}]},{"timestamp":1737840935664,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"tFarleft"],[1,"On"],[0,"(id: str"]],"start1":1200,"start2":1200,"length1":16,"length2":18},{"diffs":[[0,") {\n"],[-1,"        if (value == \"on\") {\n    "],[0,"    "]],"start1":1236,"start2":1236,"length1":41,"length2":8},{"diffs":[[0,"    "],[-1,"    }\n        else {\n    "],[1,"}\n\n    export function onEventFarleftOff(id: string, value: string) {\n"],[0,"    "]],"start1":1287,"start2":1287,"length1":33,"length2":78},{"diffs":[[0,"leftOff(id)\n"],[-1,"        }\n"],[0,"    }\n\n    e"]],"start1":1398,"start2":1398,"length1":34,"length2":24},{"diffs":[[0,"ventLeft"],[1,"On"],[0,"(id: str"]],"start1":1440,"start2":1440,"length1":16,"length2":18},{"diffs":[[0,"if ("],[-1,"value == \"on\") {\n            if (EventLeftOn) EventFarleftOn(id)\n        }\n        else {\n            if (EventLeftOff) EventFarleftOff(id)\n        }"],[1,"EventLeftOn) EventLeftOn(id)"],[0,"\n   "]],"start1":1488,"start2":1488,"length1":157,"length2":36},{"diffs":[[0,"the "],[-1,"%sensor sensor of %id hovers the line\"\n    //% block.loc.nl=\"wanneer de %sensor sensor van %id boven de lijn komt"],[1,"distance to %id is %dist\"\n    //% block.loc.nl=\"wanneer de afstand tot %id %dist is"],[0,"\"\n  "]],"start1":2715,"start2":2715,"length1":121,"length2":91},{"diffs":[[0,"n on"],[-1,"Hover(sensor: Sensor, id: string"],[1,"LFon(id: string, dist: Distance"],[0,", pr"]],"start1":2853,"start2":2853,"length1":40,"length2":39},{"diffs":[[0,"ch ("],[-1,"sensor) {"],[1,"dist) {\n            case Distance.Normal:\n                EventFrontNormal = programmableCode\n                EtCommon.events.register(MODULE, \"normal\", onEventFrontNormal)\n                break"],[0,"\n   "]],"start1":2940,"start2":2940,"length1":17,"length2":202},{"diffs":[[0,"ase "],[-1,"Sensor."],[1,"Distance.Near"],[0,":\n  "]],"start1":3152,"start2":3152,"length1":15,"length2":21},{"diffs":[[0,"   Event"],[-1,"?"],[1,"FrontNear"],[0," = progr"]],"start1":3184,"start2":3184,"length1":17,"length2":25},{"diffs":[[0,"ister(MODULE, \"n"],[-1,"ormal"],[1,"ear\", onEventFrontNear)\n                break\n            case Distance.Away:\n                EventFrontAway = programmableCode\n                EtCommon.events.register(MODULE, \"away"],[0,"\", onEvent?)\n   "]],"start1":3256,"start2":3256,"length1":37,"length2":214},{"diffs":[[0," onEvent"],[-1,"?"],[1,"FrontAway"],[0,")\n      "]],"start1":3456,"start2":3456,"length1":17,"length2":25}]}]},{"timestamp":1737841535522,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"entLeftOn) Event"],[-1,"L"],[1,"Farl"],[0,"eftOn(id)\n      "]],"start1":1521,"start2":1521,"length1":33,"length2":36},{"diffs":[[0,"ftOff) Event"],[-1,"L"],[1,"Farl"],[0,"eftOff(id)\n "]],"start1":1599,"start2":1599,"length1":25,"length2":28},{"diffs":[[0," onEvent"],[-1,"Right"],[1,"LeftOff"],[0,"(id: str"]],"start1":1662,"start2":1662,"length1":21,"length2":23},{"diffs":[[0,"    if ("],[-1,"value == \"on\") {\n    "],[1,"EventLeftOff) EventLeftOff(id)\n    }\n\n    export function onEventRightOn(id: string, value: string) {\n"],[0,"        "]],"start1":1711,"start2":1711,"length1":37,"length2":118},{"diffs":[[0,"n) Event"],[-1,"Lef"],[1,"Righ"],[0,"tOn(id)\n"]],"start1":1844,"start2":1844,"length1":19,"length2":20},{"diffs":[[0,"    "],[-1,"   "],[-1," "],[0,"}"],[1,"\n"],[0,"\n    "],[-1,"    else {\n    "],[1,"export function onEventRightOff(id: string, value: string) {\n"],[0,"    "]],"start1":1864,"start2":1864,"length1":33,"length2":76},{"diffs":[[0,"ightOff(id)\n"],[-1,"        }\n"],[0,"    }\n\n    e"]],"start1":1969,"start2":1969,"length1":34,"length2":24},{"diffs":[[0,"Farright"],[1,"On"],[0,"(id: str"]],"start1":2015,"start2":2015,"length1":16,"length2":18},{"diffs":[[0,") {\n"],[-1,"        if (value == \"on\") {\n    "],[0,"    "]],"start1":2051,"start2":2051,"length1":41,"length2":8},{"diffs":[[0,"    "],[-1,"    }\n        else {\n    "],[1,"}\n\n    export function onEventFarrightOff(id: string, value: string) {\n"],[0,"    "]],"start1":2104,"start2":2104,"length1":33,"length2":79},{"diffs":[[0,"ightOff(id)\n"],[-1,"        }\n"],[0,"    }\n\n    /"]],"start1":2218,"start2":2218,"length1":34,"length2":24},{"diffs":[[0," sig, \"\")\n    }\n"],[-1,"\n"],[0,"    //% block=\"w"]],"start1":2794,"start2":2794,"length1":33,"length2":32},{"diffs":[[0,"    case Sensor."],[-1,"FarLeft"],[0,":\n              "]],"start1":3108,"start2":3108,"length1":39,"length2":32},{"diffs":[[0,"vent"],[-1,"FarleftOn = programmableCode\n                EtCommon.events.register(MODULE, \"on\", onEventFarleft)\n                break\n            case Sensor.Left:\n                EventLeftOn = programmableCode\n                EtCommon.events.register(MODULE, \"on\", onEventLeft)\n                break\n            case Sensor.Right:\n                EventRightOn = programmableCode\n                EtCommon.events.register(MODULE, \"on\", onEventRight)\n                break\n            case Sensor.FarRight:\n                EventFarrightOn = programmableCode\n                EtCommon.events.register(MODULE, \"on\", onEventFarright)\n                break\n        }\n    }\n\n    //% block=\"when the %sensor sensor of %id leaves the line\"\n    //% block.loc.nl=\"wanneer de %sensor sensor van %id van de lijn gaat\"\n    //% id.defl=\"EtLineFollow\"\n    export function onNoHover(sensor: Sensor, id: string, programmableCode: () => void): void {\n        switch (sensor) {\n            case Sensor.FarLeft:\n                EventFarleftOn = programmableCode\n                EtCommon.events.register(MODULE, \"off\", onEventFarleft)\n                break\n            case Sensor.Left:\n                EventLeftOn = programmableCode\n                EtCommon.events.register(MODULE, \"off\", onEventLeft)\n                break\n            case Sensor.Right:\n                EventRightOn = programmableCode\n                EtCommon.events.register(MODULE, \"off\", onEventRight)\n                break\n            case Sensor.FarRight:\n                EventFarrightOn = programmableCode\n                EtCommon.events.register(MODULE, \"off\", onEventFarright"],[1,"? = programmableCode\n                EtCommon.events.register(MODULE, \"normal\", onEvent?"],[0,")\n  "]],"start1":3143,"start2":3143,"length1":1625,"length2":96}]}]},{"timestamp":1737842107084,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"iables><"],[1,"block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block><"],[0,"/xml>"]],"start1":71,"start2":71,"length1":13,"length2":114}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"let EventFar"],[-1,"L"],[1,"l"],[0,"eftOn: EtCom"]],"start1":813,"start2":813,"length1":25,"length2":25},{"diffs":[[0,"let EventFar"],[-1,"L"],[1,"l"],[0,"eftOff: EtCo"]],"start1":859,"start2":859,"length1":25,"length2":25},{"diffs":[[0,"let EventFar"],[-1,"R"],[1,"r"],[0,"ightOn: EtCo"]],"start1":1082,"start2":1082,"length1":25,"length2":25},{"diffs":[[0,"let EventFar"],[-1,"R"],[1,"r"],[0,"ightOff: EtC"]],"start1":1129,"start2":1129,"length1":25,"length2":25},{"diffs":[[0,"EventFar"],[-1,"L"],[1,"l"],[0,"eft(id: "]],"start1":1196,"start2":1196,"length1":17,"length2":17},{"diffs":[[0,"if (EventFar"],[-1,"L"],[1,"l"],[0,"eftOn) Event"]],"start1":1279,"start2":1279,"length1":25,"length2":25},{"diffs":[[0,"On) EventFar"],[-1,"L"],[1,"l"],[0,"eftOn(id)\n  "]],"start1":1295,"start2":1295,"length1":25,"length2":25},{"diffs":[[0,"if (EventFar"],[-1,"L"],[1,"l"],[0,"eftOff) Even"]],"start1":1355,"start2":1355,"length1":25,"length2":25},{"diffs":[[0,"ff) EventFar"],[-1,"L"],[1,"l"],[0,"eftOff(id)\n "]],"start1":1372,"start2":1372,"length1":25,"length2":25},{"diffs":[[0,"n onEventFar"],[-1,"R"],[1,"r"],[0,"ight(id: str"]],"start1":1883,"start2":1883,"length1":25,"length2":25},{"diffs":[[0,"if (EventFar"],[-1,"R"],[1,"r"],[0,"ightOn) Even"]],"start1":1971,"start2":1971,"length1":25,"length2":25},{"diffs":[[0,"On) EventFar"],[-1,"R"],[1,"r"],[0,"ightOn(id)\n "]],"start1":1988,"start2":1988,"length1":25,"length2":25},{"diffs":[[0,"if (EventFar"],[-1,"R"],[1,"r"],[0,"ightOff) Eve"]],"start1":2049,"start2":2049,"length1":25,"length2":25},{"diffs":[[0,"ff) EventFar"],[-1,"R"],[1,"r"],[0,"ightOff(id)\n"]],"start1":2067,"start2":2067,"length1":25,"length2":25},{"diffs":[[0,"        EventFar"],[-1,"L"],[1,"l"],[0,"eftOn = programm"]],"start1":3014,"start2":3014,"length1":33,"length2":33},{"diffs":[[0,"\"on\", onEventFar"],[-1,"L"],[1,"l"],[0,"eft)\n           "]],"start1":3105,"start2":3105,"length1":33,"length2":33},{"diffs":[[0,"        EventFar"],[-1,"R"],[1,"r"],[0,"ightOn = program"]],"start1":3528,"start2":3528,"length1":33,"length2":33},{"diffs":[[0,"\"on\", onEventFar"],[-1,"R"],[1,"r"],[0,"ight)\n          "]],"start1":3620,"start2":3620,"length1":33,"length2":33},{"diffs":[[0,"EventFar"],[-1,"L"],[1,"l"],[0,"eftOn = "]],"start1":4021,"start2":4021,"length1":17,"length2":17},{"diffs":[[0,"EventFar"],[-1,"L"],[1,"l"],[0,"eft)\n   "]],"start1":4113,"start2":4113,"length1":17,"length2":17},{"diffs":[[0,"    EventFar"],[-1,"R"],[1,"r"],[0,"ightOn = pro"]],"start1":4534,"start2":4534,"length1":25,"length2":25},{"diffs":[[0,"EventFar"],[-1,"R"],[1,"r"],[0,"ight)\n  "]],"start1":4631,"start2":4631,"length1":17,"length2":17}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," ],\n"],[-1,"    \"testFiles\": [\n        \"test.ts\"\n    ],\n"],[0,"    "]],"start1":327,"start2":327,"length1":52,"length2":8}]},{"type":"added","filename":"test.ts","value":"// tests gaan hier; deze zal niet worden gecompileerd wanneer dit pakket wordt gebruikt als extensie.\n"}]}],"snapshots":[{"timestamp":1737839746375,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"pxt-linefollow\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}},{"timestamp":1737841553744,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"//% color=\"#EEAA00\" icon=\"\\uf140\"\n//% block=\"ET: Line follower\"\n//% block.loc.nl=\"ET: Lijn volger\"\nnamespace EtLineFollow {\n    let MODULE = \"EtLineFollow\"\n\n    export enum Mode {\n        //% block=\"a dark line on a light surface\"\n        //% block.loc.nl=\"een donkere lijn op een lichte ondergrond\"\n        BonW,\n        //% block=\"a light line on a dark surface\"\n        //% block.loc.nl=\"een lichte lijn op een donkere ondergrond\"\n        WonB\n    }\n\n    export enum Sensor {\n        //% block=\"far left\"\n        //% block.loc.nl=\"uiterst links\"\n        FarLeft,\n        //% block=\"left\"\n        //% block.loc.nl=\"links\"\n        Left,\n        //% block=\"right\"\n        //% block.loc.nl=\"rechts\"\n        Right,\n        //% block=\"far right\"\n        //% block.loc.nl=\"uiterst rechts\"\n        FarRight\n    }\n\n    let EventFarleftOn: EtCommon.eventHandler\n    let EventFarleftOff: EtCommon.eventHandler\n    let EventLeftOn: EtCommon.eventHandler\n    let EventLeftOff: EtCommon.eventHandler\n    let EventRightOn: EtCommon.eventHandler\n    let EventRightOff: EtCommon.eventHandler\n    let EventFarrightOn: EtCommon.eventHandler\n    let EventFarrightOff: EtCommon.eventHandler\n\n    export function onEventFarleft(id: string, value: string) {\n        if (value == \"on\") {\n            if (EventFarleftOn) EventFarleftOn(id)\n        }\n        else {\n            if (EventFarleftOff) EventFarleftOff(id)\n        }\n    }\n\n    export function onEventLeft(id: string, value: string) {\n        if (value == \"on\") {\n            if (EventLeftOn) EventeftOn(id)\n        }\n        else {\n            if (EventLeftOff) EventeftOff(id)\n        }\n    }\n\n    export function onEventLeftOff(id: string, value: string) {\n        if (EventLeftOff) EventLeftOff(id)\n    }\n\n    export function onEventRightOn(id: string, value: string) {\n        if (EventRightOn) EventRightOn(id)\n    }\n\n    export function onEventRightOff(id: string, value: string) {\n        if (EventRightOff) EventRightOff(id)\n    }\n\n    export function onEventFarrightOn(id: string, value: string) {\n        if (EventFarrightOn) EventFarrightOn(id)\n    }\n\n    export function onEventFarrightOff(id: string, value: string) {\n        if (EventFarrightOff) EventFarrightOff(id)\n    }\n\n    //% block=\"ID\"\n    //% block.loc.nl=\"ID\"\n    export function id(): string {\n        return MODULE\n    }\n\n    //% block=\"set module id to %id\"\n    //% block.loc.nl=\"stel de module id in op %id\"\n    //% id.defl=\"EtLineFollow\"\n    export function setModuleId(id: string) {\n        MODULE = id\n    }\n\n    //% block=\"with %id ride on %mode\"\n    //% block.loc.nl=\"met %id rijd op %mode\"\n    //% id.defl=\"EtLineFollow\"\n    export function setMode(id: string, mode: Mode) {\n        let sig = (mode == Mode.BonW ? \"bonw\" : \"wonb\")\n        EtCommon.sendSignal(id, sig, \"\")\n    }\n    //% block=\"when the %sensor sensor of %id hovers the line\"\n    //% block.loc.nl=\"wanneer de %sensor sensor van %id boven de lijn komt\"\n    //% id.defl=\"EtLineFollow\"\n    export function onHover(sensor: Sensor, id: string, programmableCode: () => void): void {\n        switch (sensor) {\n            case Sensor.:\n                Event? = programmableCode\n                EtCommon.events.register(MODULE, \"normal\", onEvent?)\n                break\n        }\n    }\n}\n","README.md":"","pxt.json":"{\n    \"name\": \"pxt-linefollow\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"pxt-common\": \"github:ETmodules/pxt-common#de53829cc3818cab6a49f4c1130f4df97e9c777d\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}}],"shares":[],"lastSaveTime":1737842370590}